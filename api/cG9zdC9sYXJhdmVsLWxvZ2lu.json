{"title":"laravel-login","date":"2019-06-14T00:00:00.000Z","link":"post/laravel-login","tags":["laravel"],"categories":["program"],"updated":"2019-06-14T00:00:00.000Z","content":"<h2 id=\"Quick-Start\">Quick Start<a href=\"post/laravel-login#Quick-Start\"></a></h2><figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer create-project --prefer-dist laravel/laravel principle &amp;&amp; <span class=\"built_in\">cd</span> principle</span><br><span class=\"line\">php artisan make:auth</span><br><span class=\"line\"><span class=\"comment\"># database configuration</span></span><br><span class=\"line\">vim .env</span><br><span class=\"line\">php artisan db:seed --class=UsersTableSeeder</span><br><span class=\"line\">php artisan serve</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"Login-Route\">Login Route<a href=\"post/laravel-login#Login-Route\"></a></h2><p><code>Auth::routes();</code></p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config/app.php</span></span><br><span class=\"line\"><span class=\"string\">'Auth'</span> =&gt; Illuminate\\Support\\Facades\\Auth::class</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Illuminate\\Support\\Facades\\Auth</span></span><br><span class=\"line\">  public static <span class=\"keyword\">function</span> routes(array <span class=\"variable\">$options</span> = [])</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      static::<span class=\"variable\">$app</span>-&gt;make(<span class=\"string\">'router'</span>)-&gt;auth(<span class=\"variable\">$options</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Illuminate\\Routing\\RoutingServiceProvider</span></span><br><span class=\"line\">protected <span class=\"keyword\">function</span> registerRouter()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$this</span>-&gt;app-&gt;singleton(<span class=\"string\">'router'</span>, <span class=\"keyword\">function</span> (<span class=\"variable\">$app</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> new Router(<span class=\"variable\">$app</span>[<span class=\"string\">'events'</span>], <span class=\"variable\">$app</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Illuminate\\Routing\\Router</span></span><br><span class=\"line\">public <span class=\"keyword\">function</span> auth(array <span class=\"variable\">$options</span> = [])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // Authentication Routes...</span><br><span class=\"line\">    <span class=\"variable\">$this</span>-&gt;get(<span class=\"string\">'login'</span>, <span class=\"string\">'Auth\\LoginController@showLoginForm'</span>)-&gt;name(<span class=\"string\">'login'</span>);</span><br><span class=\"line\">    <span class=\"variable\">$this</span>-&gt;post(<span class=\"string\">'login'</span>, <span class=\"string\">'Auth\\LoginController@login'</span>);</span><br><span class=\"line\">    <span class=\"variable\">$this</span>-&gt;post(<span class=\"string\">'logout'</span>, <span class=\"string\">'Auth\\LoginController@logout'</span>)-&gt;name(<span class=\"string\">'logout'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    // Registration Routes...</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$options</span>[<span class=\"string\">'register'</span>] ?? <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$this</span>-&gt;get(<span class=\"string\">'register'</span>, <span class=\"string\">'Auth\\RegisterController@showRegistrationForm'</span>)-&gt;name(<span class=\"string\">'register'</span>);</span><br><span class=\"line\">        <span class=\"variable\">$this</span>-&gt;post(<span class=\"string\">'register'</span>, <span class=\"string\">'Auth\\RegisterController@register'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Password Reset Routes...</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$options</span>[<span class=\"string\">'reset'</span>] ?? <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$this</span>-&gt;resetPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Email Verification Routes...</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$options</span>[<span class=\"string\">'verify'</span>] ?? <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$this</span>-&gt;emailVerification();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"Login-Action-Explain\">Login Action Explain<a href=\"post/laravel-login#Login-Action-Explain\"></a></h2><h3 id=\"resource-code\">resource code<a href=\"post/laravel-login#resource-code\"></a></h3><p>according to <code>Auth::routes()</code>, source code =&gt; <code>Auth\\LoginController@login</code></p>\n<figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># App\\Http\\Controllers\\Auth\\LoginController</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">App</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Controllers</span>\\<span class=\"title\">Auth</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Controllers</span>\\<span class=\"title\">Controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Auth</span>\\<span class=\"title\">AuthenticatesUsers</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginController</span> <span class=\"keyword\">extends</span> <span class=\"title\">Controller</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">AuthenticatesUsers</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>In fact, the main code implementation is in <code>AuthenticatesUsers</code> Trait</p>\n<figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Illuminate\\Foundation\\Auth\\</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span><span class=\"params\">(Request $request)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;validateLogin($request);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If the class is using the ThrottlesLogins trait, we can automatically throttle</span></span><br><span class=\"line\">        <span class=\"comment\">// the login attempts for this application. We'll key this by the username and</span></span><br><span class=\"line\">        <span class=\"comment\">// the IP address of the client making these requests into this application.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (method_exists(<span class=\"keyword\">$this</span>, <span class=\"string\">'hasTooManyLoginAttempts'</span>) &amp;&amp;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;hasTooManyLoginAttempts($request)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;fireLockoutEvent($request);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;sendLockoutResponse($request);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;attemptLogin($request)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;sendLoginResponse($request);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If the login attempt was unsuccessful we will increment the number of attempts</span></span><br><span class=\"line\">        <span class=\"comment\">// to login and redirect the user back to the login form. Of course, when this</span></span><br><span class=\"line\">        <span class=\"comment\">// user surpasses their maximum number of attempts they will get locked out.</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;incrementLoginAttempts($request);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;sendFailedLoginResponse($request);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"explain\">explain<a href=\"post/laravel-login#explain\"></a></h3><ol>\n<li>validate login form</li>\n<li>rate limiting</li>\n<li>attempt login &amp;&amp; return success response</li>\n<li>increment login attempts count for rate limiting</li>\n<li>return fail response </li>\n</ol>\n<blockquote>\n<p>More important is attempt login</p>\n</blockquote>\n<h3 id=\"attempt-login\">attempt login<a href=\"post/laravel-login#attempt-login\"></a></h3><figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;attemptLogin($request)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;sendLoginResponse($request);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attemptLogin</span><span class=\"params\">(Request $request)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;guard()-&gt;attempt(</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;credentials($request), $request-&gt;filled(<span class=\"string\">'remember'</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>In fact, the main code implementation is in <code>Illuminate\\Auth\\SessionGuard</code>  Class</p>\n<blockquote>\n<p><code>SessionGuard</code>  <code>attempt</code> method</p>\n</blockquote>\n<figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">attempt</span><span class=\"params\">(array $credentials = [], $remember = false)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;fireAttemptEvent($credentials, $remember);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;lastAttempted = $user = <span class=\"keyword\">$this</span>-&gt;provider-&gt;retrieveByCredentials($credentials);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If an implementation of UserInterface was returned, we'll ask the provider</span></span><br><span class=\"line\">    <span class=\"comment\">// to validate the user against the given credentials, and if they are in</span></span><br><span class=\"line\">    <span class=\"comment\">// fact valid we'll log the users into the application and return true.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;hasValidCredentials($user, $credentials)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;login($user, $remember);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If the authentication attempt fails we will fire an event so that the user</span></span><br><span class=\"line\">    <span class=\"comment\">// may be notified of any suspicious attempts to access their account from</span></span><br><span class=\"line\">    <span class=\"comment\">// an unrecognized user. A developer may listen to this event as needed.</span></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;fireFailedEvent($user, $credentials);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<blockquote>\n<p>The essence is to save a session</p>\n</blockquote>\n<figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\"># Illuminate\\Auth\\SessionGuard</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateSession</span><span class=\"params\">($id)</span></span></span><br><span class=\"line\"><span class=\"function\">  </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">$this</span>-&gt;session-&gt;put(<span class=\"keyword\">$this</span>-&gt;getName(), $id);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">$this</span>-&gt;session-&gt;migrate(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight php\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># Illuminate\\Auth\\SessionGuard</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"string\">'login_'</span>.<span class=\"keyword\">$this</span>-&gt;name.<span class=\"string\">'_'</span>.sha1(<span class=\"keyword\">static</span>::class);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"laravel-envoy","link":"post/laravel-envoy"},"next":{"title":"laravel-reset-password","link":"post/laravel-reset-password"},"plink":"https://spaco.github.io/post/laravel-login/","toc":[{"title":"Quick Start","id":"Quick-Start","index":"1"},{"title":"Login Route","id":"Login-Route","index":"2"},{"title":"Login Action Explain","id":"Login-Action-Explain","index":"3","children":[{"title":"resource code","id":"resource-code","index":"3.1"},{"title":"explain","id":"explain","index":"3.2"},{"title":"attempt login","id":"attempt-login","index":"3.3"}]}],"reward":true,"copyright":{"link":"<a href=\"https://spaco.github.io/post/laravel-login/\" title=\"laravel-login\">https://spaco.github.io/post/laravel-login/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}