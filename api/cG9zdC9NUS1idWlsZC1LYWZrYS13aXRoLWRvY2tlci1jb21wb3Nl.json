{"title":"Build Kafka with docker-compose","date":"2018-10-05T00:00:00.000Z","slug":"MQ-build-Kafka-with-docker-compose","tags":["MQ-kafka"],"categories":["program"],"updated":"2018-12-05T07:36:42.613Z","content":"<h2 id=\"Build-Kafka-with-docker-compose\"><a href=\"#Build-Kafka-with-docker-compose\" class=\"headerlink\" title=\"Build Kafka with docker-compose\"></a>Build Kafka with docker-compose</h2><h3 id=\"precondition\"><a href=\"#precondition\" class=\"headerlink\" title=\"precondition\"></a>precondition</h3><ul>\n<li><p>kafka</p>\n</li>\n<li><p>kafka-manager</p>\n</li>\n<li><p>zookeeper</p>\n<p><code>本次测试 docker 已安装kafka zookeeper kafaka-manager,不讲述具体安装流程，如何安装查看结尾docker-compose.yml既可</code></p>\n</li>\n</ul>\n<h3 id=\"可用性测试\"><a href=\"#可用性测试\" class=\"headerlink\" title=\"可用性测试\"></a>可用性测试</h3><p>   –zookeeper ZookeeperName ： ZookeeperName指的是本地zookeeper的名字</p>\n<ol>\n<li><p>进入指定kafka容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose <span class=\"built_in\">exec</span> kafka bash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建topic</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cd KAFKA_HOME/bin/</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt/kafka_2.11-2.0.1/bin/</span><br><span class=\"line\"></span><br><span class=\"line\">kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic send-register-sms</span><br><span class=\"line\"><span class=\"comment\"># Created topic \"send-register-sms\".</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看创建的topic</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看zookeeper topics</span></span><br><span class=\"line\">kafka-topics.sh --list --zookeeper zookeeper:2181</span><br><span class=\"line\"><span class=\"comment\"># 查看某个topic</span></span><br><span class=\"line\">kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic send-register-sms</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发送信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kafka-console-producer.sh --broker-list localhost:9092 --topic=send-register-sms</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">\"phone\"</span>:<span class=\"string\">\"17626041111\"</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新窗口接收信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cd KAFKA_HOME/bin/</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt/kafka_2.11-2.0.1/bin/</span><br><span class=\"line\"></span><br><span class=\"line\">kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic send-register-sms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当出现发送的消息  success~</span></span><br><span class=\"line\">&#123;<span class=\"string\">\"phone\"</span>:<span class=\"string\">\"17626041111\"</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h3><ul>\n<li><a href=\"https://tomoyadeng.github.io/blog/2018/06/02/kafka-cluster-in-docker/index.html\" target=\"_blank\" rel=\"noopener\">使用Docker快速搭建Kafka开发环境</a></li>\n</ul>\n<h3 id=\"QAQ\"><a href=\"#QAQ\" class=\"headerlink\" title=\"QAQ\"></a>QAQ</h3><ol>\n<li><p>WARN [Producer clientId=console-producer] Connection to node -1 could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)</p>\n<p><code>docker-compose.yml kafka设置的 KAFKA_ADVERTISED_HOST_NAME 问题，改成 bash: ipconfig getifaddr en0  显示的ip值即可</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REAL_IP = ipconfig getifaddr en0</span><br><span class=\"line\">kafka </span><br><span class=\"line\">\tKAFKA_ADVERTISED_HOST_NAME: REAL_IP</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置后 rebuild kafka 显示 kafka uses an image, skipping  (已经把zookeeper kafka-manager 关闭)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## force create</span></span><br><span class=\"line\">docker-compose up -d --force-recreate kafka</span><br><span class=\"line\">docker-compose up -d --force-recreate zookeeper</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Remarks\"><a href=\"#Remarks\" class=\"headerlink\" title=\"Remarks\"></a>Remarks</h3><ul>\n<li><p>docker-compose.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### Zookeeper ################################################</span></span><br><span class=\"line\">    zookeeper:</span><br><span class=\"line\">      image: wurstmeister/zookeeper</span><br><span class=\"line\">      container_name: zookeeper</span><br><span class=\"line\">      restart: always</span><br><span class=\"line\">      ports:</span><br><span class=\"line\">        - <span class=\"string\">\"2181:2181\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Kafka ################################################    </span></span><br><span class=\"line\">    kafka:</span><br><span class=\"line\">      image: wurstmeister/kafka</span><br><span class=\"line\">      container_name: kafka</span><br><span class=\"line\">      ports:</span><br><span class=\"line\">        - <span class=\"string\">\"9092:9092\"</span></span><br><span class=\"line\">      environment:</span><br><span class=\"line\">        KAFKA_ADVERTISED_HOST_NAME: 192.168.1.112</span><br><span class=\"line\">        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181</span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">        - /var/run/docker.sock:/var/run/docker.sock</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Kafka-manager ################################################ </span></span><br><span class=\"line\">    kafka-manager:</span><br><span class=\"line\">      image: sheepkiller/kafka-manager                </span><br><span class=\"line\">      ports:  </span><br><span class=\"line\">        - <span class=\"string\">\"9003:9000\"</span>     </span><br><span class=\"line\">      environment:</span><br><span class=\"line\">        ZK_HOSTS: zookeeper:2181</span><br><span class=\"line\">        APPLICATION_SECRET: <span class=\"string\">\"random-secret\"</span></span><br><span class=\"line\">        KAFKA_MANAGER_AUTH_ENABLED: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">        KAFKA_MANAGER_USERNAME: <span class=\"string\">\"admin\"</span></span><br><span class=\"line\">        KAFKA_MANAGER_PASSWORD: <span class=\"string\">\"secret\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","prev":{"title":"Hexo in Travis-CI","slug":"hexo-in-travis-ci"},"next":{"title":"Principle of laravel","slug":"laravel-principle"},"link":"https://spaco.github.io/post/MQ-build-Kafka-with-docker-compose/","toc":[{"title":"Build Kafka with docker-compose","id":"Build-Kafka-with-docker-compose","index":"1","children":[{"title":"precondition","id":"precondition","index":"1.1"},{"title":"可用性测试","id":"可用性测试","index":"1.2"},{"title":"reference","id":"reference","index":"1.3"},{"title":"QAQ","id":"QAQ","index":"1.4"},{"title":"Remarks","id":"Remarks","index":"1.5"}]}]}