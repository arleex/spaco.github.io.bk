{"title":"mysql sketch","date":"2018-12-14T00:00:00.000Z","slug":"Mysql-Basic","tags":["mysql"],"categories":["program"],"updated":"2019-02-20T07:38:22.014Z","content":"<h3 id=\"Backend-Service\"><a href=\"#Backend-Service\" class=\"headerlink\" title=\"Backend Service\"></a>Backend Service</h3><p>LNMP</p>\n<ul>\n<li><p>操作系统 ：windows / linux（centos / ubuntu）</p>\n</li>\n<li><p>HTTP 服务器 ： Apache / Nginx</p>\n<ul>\n<li>作用目的是一致的，简单说就是接收用户请求，然后处理请求，最后将处理结果返回给用户</li>\n</ul>\n</li>\n<li><p>数据库</p>\n<ul>\n<li><p>关系型数据库 ：，是指采用了关系模型来组织数据的数据库。 <a href=\"https://zhuanlan.zhihu.com/p/35003675\" target=\"_blank\" rel=\"noopener\">几种常见关系型数据库</a></p>\n</li>\n<li><ul>\n<li>mysql ：</li>\n<li>Oracle :</li>\n<li>SQLite :</li>\n<li>PostgreSQL</li>\n</ul>\n</li>\n<li><p>extra ： 非关系型数据库Nosql (not only sql) :数据也是在逐渐增长和变得复杂、非固定结构化的。这些所有的变化都是很难在原有的关系型数据库中管理的;</p>\n</li>\n<li><ul>\n<li>key-value（Redis）:</li>\n<li>文档型 （MongoDB）：</li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1082582\" target=\"_blank\" rel=\"noopener\">常见几种nosql特点、区别以及应用场景</a></li>\n<li><a href=\"http://blog.51cto.com/2406236/2108520\" target=\"_blank\" rel=\"noopener\">关系型数据库和非关系型数据库的特性以及各自的优缺点</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Language</p>\n<p>php</p>\n</li>\n</ul>\n<h3 id=\"Mysql-Basic\"><a href=\"#Mysql-Basic\" class=\"headerlink\" title=\"Mysql Basic\"></a>Mysql Basic</h3><p><a href=\"https://www.mysql.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p>当前最新版本：V8.0</p>\n<p><a href=\"https://www.mysql.com/products/enterprise/database/\" target=\"_blank\" rel=\"noopener\">https://www.mysql.com/products/enterprise/database/</a></p>\n<h4 id=\"Develop-Environment\"><a href=\"#Develop-Environment\" class=\"headerlink\" title=\"Develop Environment\"></a>Develop Environment</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -V</span><br><span class=\"line\">version 5.7.25</span><br></pre></td></tr></table></figure>\n<h4 id=\"什么是数据库\"><a href=\"#什么是数据库\" class=\"headerlink\" title=\"什么是数据库\"></a>什么是数据库</h4><p>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库。</p>\n<p>每个数据库都有一个或多个不同的 API 用于创建，访问，管理，搜索和复制所保存的数据。</p>\n<p>我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。</p>\n<p>所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理的大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。</p>\n<p>RDBMS 即关系数据库管理系统(Relational Database Management System)的特点：</p>\n<ul>\n<li>1.数据以表格的形式出现</li>\n<li>2.每行为各种记录名称</li>\n<li>3.每列为记录名称所对应的数据域</li>\n<li>4.许多的行和列组成一张表单</li>\n<li>5.若干的表单组成database</li>\n</ul>\n<p>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是较好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一</p>\n<h4 id=\"为什么选用Mysql\"><a href=\"#为什么选用Mysql\" class=\"headerlink\" title=\"为什么选用Mysql\"></a>为什么选用Mysql</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">MySQL 是开源的，所以你不需要支付额外的费用。</span><br><span class=\"line\">MySQL 支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</span><br><span class=\"line\">MySQL 使用标准的 SQL 数据语言形式。</span><br><span class=\"line\">MySQL 可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby 和 Tcl 等。</span><br><span class=\"line\">MySQL 对PHP有很好的支持，PHP 是目前最流行的 Web 开发语言。</span><br><span class=\"line\">MySQL 支持大型数据库，支持 5000 万条记录的数据仓库，32 位系统表文件最大可支持 4GB，64 位系统支持最大的表文件为8TB。</span><br><span class=\"line\">MySQL 是可以定制的，采用了 GPL 协议，你可以修改源码来开发自己的 MySQL 系统。</span><br></pre></td></tr></table></figure>\n<h4 id=\"相关概念\"><a href=\"#相关概念\" class=\"headerlink\" title=\"相关概念\"></a>相关概念</h4><ul>\n<li>数据库(database) : 数据库是一些关联表的集合</li>\n<li>数据表</li>\n<li>主键(PRIMARY KEY) : 主键是唯一的,一个数据表中只能包含一个主键。你可以使用主键来查询数据。</li>\n<li>索引(index) :使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录</li>\n<li>表头(header): 每一列的名称;</li>\n<li>列(col): 具有相同数据类型的数据的集合;</li>\n<li>行(row): 每一行用来描述某条记录的具体信息;</li>\n<li>值(value): 行的具体信息, 每个值必须与该列的数据类型相同;</li>\n</ul>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><a href=\"https://www.mysql.com/downloads/\" target=\"_blank\" rel=\"noopener\">https://www.mysql.com/downloads/</a></li>\n</ul>\n<h4 id=\"Console\"><a href=\"#Console\" class=\"headerlink\" title=\"Console\"></a>Console</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 进入mysql容器</span></span><br><span class=\"line\">docker-compose <span class=\"built_in\">exec</span> mysql bash</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>connect</p>\n</li>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create database</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database zeaho default character <span class=\"built_in\">set</span> utf8mb4 collate utf8mb4_unicode_ci;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## check</span></span><br><span class=\"line\">show databases;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>drop database</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database zeaho;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## check</span></span><br><span class=\"line\">show databases;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>select database</p>\n<p>在你连接到 MySQL 数据库后，可能有多个可以操作的数据库，所以你需要选择你要操作的数据库。</p>\n<p>成功选择了某个数据库后，在后续的操作中都会在选择的数据库中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use zeaho;</span><br><span class=\"line\"></span><br><span class=\"line\">Database changed</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>create datatable</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use zeaho;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE `admin` (</span><br><span class=\"line\">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class=\"line\">  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class=\"line\">  `nick_name` char(50) DEFAULT NULL,</span><br><span class=\"line\">  `unique_name` char(16) NOT NULL,</span><br><span class=\"line\">  `password` varchar(128) NOT NULL,</span><br><span class=\"line\">  `is_active` tinyint(3) unsigned NOT NULL DEFAULT <span class=\"string\">'1'</span>,</span><br><span class=\"line\">  `remember_token` varchar(255) DEFAULT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`id`),</span><br><span class=\"line\">  UNIQUE KEY `unique_name` (`unique_name`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8mb4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## check</span></span><br><span class=\"line\">show tables;</span><br></pre></td></tr></table></figure>\n<p>数据库字段具体如何选择见底部 Expansion</p>\n</li>\n<li><p>drop datatable 删除数据表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop table admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>插入数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO table_name ( field1, field2,...fieldN )</span><br><span class=\"line\">                       VALUES</span><br><span class=\"line\">                       ( value1, value2,...valueN );</span><br><span class=\"line\">                       </span><br><span class=\"line\"><span class=\"comment\">## 插入数据</span></span><br><span class=\"line\">INSERT INTO `zeaho`.`admin`(`nick_name`, `unique_name`, `password`, `remember_token`) VALUES (<span class=\"string\">'name'</span>, <span class=\"string\">'176'</span>, <span class=\"string\">'secrey'</span>, <span class=\"string\">'1dsddas'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO `zeaho`.`admin`(`nick_name`, `unique_name`, `password`, `remember_token`) VALUES (<span class=\"string\">'name1'</span>, <span class=\"string\">'1761'</span>, <span class=\"string\">'secrey1'</span>, <span class=\"string\">'1dsddas1'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO `zeaho`.`admin`(`nick_name`, `unique_name`, `password`, `remember_token`) VALUES (<span class=\"string\">'name1'</span>, <span class=\"string\">'17612'</span>, <span class=\"string\">'secrey1'</span>, <span class=\"string\">'1dsddas1'</span>);</span><br></pre></td></tr></table></figure>\n<p>如果数据是字符型，必须使用单引号或者双引号，如：”value”。</p>\n</li>\n<li><p>查询数据</p>\n<ul>\n<li><p>所有列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>指定列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select id,nick_name from admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>去重列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select distinct（password）from admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最大列，最小列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select max(id) from admin;</span><br><span class=\"line\">select min(id) from admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select count(id) from admin;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>指定行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from admin where id = 1 and (id is null or id is not null);</span><br><span class=\"line\">select * from admin where nick_name like &apos;%name%&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多表查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 插入测试数据</span></span><br><span class=\"line\">DROP TABLE IF EXISTS `user`;</span><br><span class=\"line\">CREATE TABLE `user` (</span><br><span class=\"line\">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `creator_id` bigint(20) DEFAULT NULL,</span><br><span class=\"line\">  `name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,</span><br><span class=\"line\">  `score` int(10) unsigned DEFAULT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">-- ----------------------------</span><br><span class=\"line\">-- Records of user</span><br><span class=\"line\">-- ----------------------------</span><br><span class=\"line\">INSERT INTO `user` VALUES (1, 43, <span class=\"string\">'a'</span>, 1);</span><br><span class=\"line\">INSERT INTO `user` VALUES (3, NULL, <span class=\"string\">'b'</span>, 2);</span><br><span class=\"line\">INSERT INTO `user` VALUES (4, NULL, <span class=\"string\">'c'</span>, 4);</span><br><span class=\"line\">INSERT INTO `user` VALUES (5, NULL, <span class=\"string\">'d'</span>, 3);</span><br><span class=\"line\">INSERT INTO `user` VALUES (6, NULL, <span class=\"string\">'e'</span>, 2);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select u.*, a.id as admin_id from user u, admin a <span class=\"built_in\">where</span> a.id = u.creator_id;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>更新数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 语法</span></span><br><span class=\"line\">UPDATE table_name SET field1=new-value1, field2=new-value2</span><br><span class=\"line\">[WHERE Clause]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>你可以同时更新一个或多个字段。</li>\n<li>你可以在 WHERE 子句中指定任何条件。</li>\n<li>你可以在一个单独表中同时更新数据。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##单表更新</span></span><br><span class=\"line\">UPDATE `zeaho`.`admin` SET `unique_name` = <span class=\"string\">'17626'</span> WHERE `id` = 43;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##多表联合修改</span></span><br><span class=\"line\">update user u,admin a <span class=\"built_in\">set</span> u.name = <span class=\"string\">'new name'</span> <span class=\"built_in\">where</span> a.id = u.creator_id;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 语法</span></span><br><span class=\"line\">DELETE FROM table_name [WHERE Clause]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果没有指定 WHERE 子句，MySQL 表中的所有记录将被删除。</span><br><span class=\"line\">你可以在 WHERE 子句中指定任何条件</span><br><span class=\"line\">您可以在单个表中一次性删除记录。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##单表删除</span></span><br><span class=\"line\">delete from  `zeaho`.`admin` WHERE `id` = 44;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##多表联合删除</span></span><br><span class=\"line\">delete u from user u, admin a <span class=\"built_in\">where</span> a.id = u.creator_id and u.name = <span class=\"string\">'real_name'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>排序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT field1, field2 FROM table_name ORDER BY field1, [field2...] [ASC [DESC]]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * from user <span class=\"built_in\">where</span> id &gt; 1 ORDER BY score DESC,id ASC;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分组</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT column_name, <span class=\"keyword\">function</span>(column_name)</span><br><span class=\"line\">FROM table_name</span><br><span class=\"line\">WHERE column_name operator value</span><br><span class=\"line\">GROUP BY column_name;</span><br><span class=\"line\"></span><br><span class=\"line\">GROUP BY 语句根据一个或多个列对结果集进行分组。</span><br><span class=\"line\">在分组的列上我们可以使用 COUNT(总数), SUM(求和), AVG(平均值),等函数。</span><br></pre></td></tr></table></figure>\n<p>测试数据表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `sign_in` (</span><br><span class=\"line\">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT <span class=\"string\">'主键'</span>,</span><br><span class=\"line\">  `user_id` bigint(20) unsigned NOT NULL COMMENT <span class=\"string\">'用户id'</span>,</span><br><span class=\"line\">  `date` date NOT NULL COMMENT <span class=\"string\">'签到时间'</span>,</span><br><span class=\"line\">  `score` int(10) unsigned NOT NULL DEFAULT <span class=\"string\">'0'</span> COMMENT <span class=\"string\">'上课评分'</span>,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看测试数据</span></span><br><span class=\"line\">INSERT INTO `sign_in` VALUES (1, 1, <span class=\"string\">'2019-01-31'</span>, 1);</span><br><span class=\"line\">INSERT INTO `sign_in` VALUES (2, 2, <span class=\"string\">'2019-01-23'</span>, 2);</span><br><span class=\"line\">INSERT INTO `sign_in` VALUES (3, 2, <span class=\"string\">'2019-01-19'</span>, 5);</span><br><span class=\"line\">INSERT INTO `sign_in` VALUES (4, 1, <span class=\"string\">'2019-01-19'</span>, 7);</span><br></pre></td></tr></table></figure>\n<p>演示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## COUNT</span></span><br><span class=\"line\"><span class=\"comment\">## 查询签到次数</span></span><br><span class=\"line\">SELECT `user_id`, COUNT(*) FROM  sign_in GROUP BY user_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SUM</span></span><br><span class=\"line\"><span class=\"comment\">## 查询评分总数</span></span><br><span class=\"line\">SELECT `user_id`, SUM(score) FROM  sign_in GROUP BY user_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## AVG</span></span><br><span class=\"line\"><span class=\"comment\">## 查询平均得分</span></span><br><span class=\"line\">SELECT `user_id`, AVG(score) FROM  sign_in GROUP BY user_id;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Expansion\"><a href=\"#Expansion\" class=\"headerlink\" title=\"Expansion\"></a>Expansion</h3><ul>\n<li>数据库字段的选择</li>\n</ul>\n","prev":{"title":"Spring Boot2 Testing","slug":"Spring-Boot2-Testing"},"next":{"title":"elasticsearch sketch","slug":"elasticsearch-with-docker-compose"},"link":"https://spaco.github.io/post/Mysql-Basic/"}