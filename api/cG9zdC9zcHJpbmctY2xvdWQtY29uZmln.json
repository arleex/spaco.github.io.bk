{"title":"Spring Cloud Config","date":"2019-09-01T00:00:00.000Z","link":"post/spring-cloud-config","tags":["spring-cloud"],"categories":["program"],"updated":"2019-09-01T00:00:00.000Z","content":"<h1 id=\"Spring-Cloud-Config\">Spring Cloud Config<a href=\"post/spring-cloud-config#Spring-Cloud-Config\"></a></h1><h2 id=\"Introduction\">Introduction<a href=\"post/spring-cloud-config#Introduction\"></a></h2><p>Spring Cloud Config为分布式系统中的外部化配置提供服务器端和客户端支持。使用Config Server，您可以在所有环境中管理应用程序的外部属性。客户端和服务器上的概念映射与Spring Environment和PropertySource抽象，因此它们非常适合Spring应用程序，但可以与任何语言运行的任何应用程序一起使用。当应用程序通过部署管道从开发到测试再到生产时，您可以管理这些环境之间的配置，并确保应用程序具有迁移时需要运行的所有内容。服务器存储后端的默认实现使用git，因此它可以轻松支持配置环境的标签版本，以及可用于管理内容的各种工具。添加替代实现并使用Spring配置插入它们很容易。</p>\n<h2 id=\"Development-Environment\">Development Environment<a href=\"post/spring-cloud-config#Development-Environment\"></a></h2><ul>\n<li>Spring Boot : 2.1.7</li>\n<li>gradle : 5.6</li>\n<li>Java : jdk1.8</li>\n</ul>\n<h2 id=\"Key-Words\">Key Words<a href=\"post/spring-cloud-config#Key-Words\"></a></h2><ul>\n<li>Config Server</li>\n<li>Config Client</li>\n<li>bootstrap.[yml | properties]</li>\n<li>zookeeper</li>\n<li>vault</li>\n<li>consul</li>\n</ul>\n<h2 id=\"Build-Config-Server\">Build Config Server<a href=\"post/spring-cloud-config#Build-Config-Server\"></a></h2><h3 id=\"配置Gradle\">配置Gradle<a href=\"post/spring-cloud-config#配置Gradle\"></a></h3><figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">implementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-web'</span></span><br><span class=\"line\">implementation <span class=\"string\">'org.springframework.cloud:spring-cloud-config-server'</span></span><br><span class=\"line\">implementation <span class=\"string\">'org.springframework.cloud:spring-cloud-function-web'</span></span><br><span class=\"line\">implementation <span class=\"string\">'org.springframework.cloud:spring-cloud-starter'</span></span><br><span class=\"line\">implementation <span class=\"string\">'org.springframework.cloud:spring-cloud-starter-task'</span></span><br><span class=\"line\">compileOnly <span class=\"string\">'org.projectlombok:lombok'</span></span><br><span class=\"line\">developmentOnly <span class=\"string\">'org.springframework.boot:spring-boot-devtools'</span></span><br><span class=\"line\">annotationProcessor <span class=\"string\">'org.springframework.boot:spring-boot-configuration-processor'</span></span><br><span class=\"line\">annotationProcessor <span class=\"string\">'org.projectlombok:lombok'</span></span><br><span class=\"line\">testImplementation <span class=\"string\">'org.springframework.boot:spring-boot-starter-test'</span></span><br></pre></td></tr></table></div></figure>\n<h3 id=\"配置-application-properties\">配置 application.properties<a href=\"post/spring-cloud-config#配置-application-properties\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=8081</span><br><span class=\"line\">spring.cloud.config.server.git.uri=https://github.com/spaco/spring-cloud-config-repo-samples</span><br></pre></td></tr></table></div></figure>\n<p>git仓库文件如下：</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></div></figure>\n<h3 id=\"配置启动器\">配置启动器<a href=\"post/spring-cloud-config#配置启动器\"></a></h3><p><code>主要是@EnableConfigServer注解</code></p>\n<figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigServer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConfigServerApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(ConfigServerApplication.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"启动服务\">启动服务<a href=\"post/spring-cloud-config#启动服务\"></a></h3><h3 id=\"Test-Cases\">Test Cases<a href=\"post/spring-cloud-config#Test-Cases\"></a></h3><p>在测试之前，开发者需要知道Config Server寻找配置文件的规则</p>\n<p>开发者请求 Config Server 的端点可以获取配置文件的内容，请求地址与配置文件的映射如下：</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</span><br><span class=\"line\">/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class=\"line\">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class=\"line\">/&#123;application&#125;-&#123;profile&#125;.properties</span><br><span class=\"line\">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</span><br></pre></td></tr></table></div></figure>\n<p>application  profile  label分别对应着什么呢？</p>\n<ul>\n<li>application 意味着项目名称，可以通过<code>spring.cloud.config.name</code>配置修改</li>\n<li>profile 意味着项目环境，测试服可以配置为<code>dev</code>，正式服可以配置为<code>pro</code>，可以通过<code>spring.cloud.config.profile</code>配置修改</li>\n<li>label 意味着git 分支版本，如果是使用的配置文件是本地，那么是无效的，可以通过<code>spring.cloud.config.label</code>配置修改，默认是 <code>master</code></li>\n</ul>\n<p><strong>获取配置文件我们采用两种方式，一种@Value,一种Environment</strong></p>\n<h4 id=\"Test-1-：请求-application-profile\">Test 1 ：请求 application+profile<a href=\"post/spring-cloud-config#Test-1-：请求-application-profile\"></a></h4><p><code>curl localhost:8081/config-client/dev</code></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">application = config-client</span><br><span class=\"line\">profile = dev</span><br></pre></td></tr></table></div></figure>\n<p>请求结果如下</p>\n<figure class=\"highlight json\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"config-client\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"profiles\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"dev\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"label\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"dd39228cf1b62a2a12f6afb26fc49dda0d8cd451\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"state\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"propertySources\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"https://github.com/spaco/spring-cloud-config-repo-samples/config-client-dev.properties\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"filename\"</span>: <span class=\"string\">\"config-client-dev.properties\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client-dev.properties\"</span>: <span class=\"string\">\"config-client-dev.properties\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client-dev.unique\"</span>: <span class=\"string\">\"config-client-dev.properties\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"https://github.com/spaco/spring-cloud-config-repo-samples/config-client-dev.yml\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"filename\"</span>: <span class=\"string\">\"config-client-dev.yml\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client-dev.yml\"</span>: <span class=\"string\">\"config-client-dev.yml\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client-dev.unique\"</span>: <span class=\"string\">\"config-client-dev.yml\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"https://github.com/spaco/spring-cloud-config-repo-samples/config-client.properties\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"filename\"</span>: <span class=\"string\">\"config-client.properties\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client.properties\"</span>: <span class=\"string\">\"config-client.properties\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client.unique\"</span>: <span class=\"string\">\"config-client.properties\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"https://github.com/spaco/spring-cloud-config-repo-samples/config-client.yml\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"filename\"</span>: <span class=\"string\">\"config-client.yml\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client.yml\"</span>: <span class=\"string\">\"config-client.yml\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"config-client.unique\"</span>: <span class=\"string\">\"config-client.yml\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>总结：共获得 <code>config-client-dev.properties</code> <code>config-client-dev.yml</code> <code>config-client.properties</code> <code>config-client.yml</code> 的配置信息，不仅会得到配置信息，还存在 git 版本信息</p>\n<h4 id=\"Test-2-：请求-application-profile指定文件-yml-properties\">Test 2 ：请求 application+profile指定文件 .yml | .properties<a href=\"post/spring-cloud-config#Test-2-：请求-application-profile指定文件-yml-properties\"></a></h4><figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl localhost:8081/config-client-dev.yml</span><br></pre></td></tr></table></div></figure>\n<p>请求结果如下：</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config-client-dev:</span><br><span class=\"line\">  properties: config-client-dev.properties</span><br><span class=\"line\">  unique: config-client-dev.properties</span><br><span class=\"line\">  yml: config-client-dev.yml</span><br><span class=\"line\">config-client:</span><br><span class=\"line\">  properties: config-client.properties</span><br><span class=\"line\">  unique: config-client.properties</span><br><span class=\"line\">  yml: config-client.yml</span><br><span class=\"line\">filename: config-client-dev.properties</span><br></pre></td></tr></table></div></figure>\n<p>总结： 共获得 <code>config-client-dev.properties</code> <code>config-client-dev.yml</code> <code>config-client.properties</code> <code>config-client.yml</code> 的配置信息。<strong>.properties 会覆盖 .yml 配置信息</strong>，<strong>请求指定文件功能无效</strong>，当然，一般来说，不会存在 .yml 与 .properties共存的结果</p>\n<h2 id=\"Build-Config-Client\">Build Config Client<a href=\"post/spring-cloud-config#Build-Config-Client\"></a></h2><p>当<code>application.properties</code>配置<code>spring.profiles.active=dev</code> 并且本地配置文件<code>application-dev.properties</code>存在，<code>application-dev.properties</code>配置的优先级是低于远程配置的，即会被覆盖</p>\n<h3 id=\"配置Gradle-1\">配置Gradle<a href=\"post/spring-cloud-config#配置Gradle-1\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation &apos;org.springframework.boot:spring-boot-starter-web&apos;</span><br><span class=\"line\">    implementation &apos;org.springframework.cloud:spring-cloud-function-web&apos;</span><br><span class=\"line\">    implementation &apos;org.springframework.cloud:spring-cloud-starter&apos;</span><br><span class=\"line\">    implementation &apos;org.springframework.cloud:spring-cloud-starter-config&apos;</span><br><span class=\"line\">    implementation &apos;org.springframework.cloud:spring-cloud-starter-task&apos;</span><br><span class=\"line\">    compileOnly &apos;org.projectlombok:lombok&apos;</span><br><span class=\"line\">    developmentOnly &apos;org.springframework.boot:spring-boot-devtools&apos;</span><br><span class=\"line\">    annotationProcessor &apos;org.springframework.boot:spring-boot-configuration-processor&apos;</span><br><span class=\"line\">    annotationProcessor &apos;org.projectlombok:lombok&apos;</span><br><span class=\"line\">    testImplementation &apos;org.springframework.boot:spring-boot-starter-test&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"配置-application-properties-1\">配置 application.properties<a href=\"post/spring-cloud-config#配置-application-properties-1\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=8082</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"配置-bootstrap-properties\">配置 bootstrap.properties<a href=\"post/spring-cloud-config#配置-bootstrap-properties\"></a></h3><p><strong>重点</strong>：<strong>关于 Spring Cloud Config 的配置需要在 <code>bootstrap.properties</code>中配置</strong></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 配置中心的具体地址，即 config-server</span><br><span class=\"line\">spring.cloud.config.uri=http://localhost:8081</span><br><span class=\"line\"># 对应 &#123;application&#125; 部分</span><br><span class=\"line\">spring.cloud.config.name=config-client</span><br><span class=\"line\"># 对应 &#123;profile&#125; 部分</span><br><span class=\"line\">spring.cloud.config.profile=dev</span><br><span class=\"line\"># 对应 &#123;label&#125; 部分，即 Git 的分支。如果配置中心使用的是本地存储，则该参数无用</span><br><span class=\"line\">spring.cloud.config.label=master</span><br></pre></td></tr></table></div></figure>\n<p>原因：</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">而现在我们把获取配置内容的 config client 相关配置放在了 application.properties 中，这样是不是就有点不对了，因为这里会出现一个先后顺序的问题。如果我们把配置放在了 application.properties 中，那么它会先去加载 bootstrap.properties中 的配置属性(如果没有，会加载默认配置)，假如我们在 application.properties 中配置的 uri 端口是 8081，那么它将不会被应用，还是默认的 8888 端口</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spring Cloud 有一个 引导上下文 的概念，它是主应用程序的父上下文，这个引导上下文负责从外部源（配置服务器，如Config Server）加载配置属性，及解密外部配置文件中的属性。主应用程序加载的是 application.(properties/yml) 中的属性，引导上下文加载 bootstrap.(properties/yml) 中的属性。这两个上下文共享一个Environment，但配置在 boostrap.* 中的属性有更高的优先级，因此默认情况下不能被本地配置覆盖。</span><br><span class=\"line\"></span><br><span class=\"line\">设置 spring.cloud.bootstrap.enabled=false 可以禁用引导过程</span><br></pre></td></tr></table></div></figure>\n<p><strong>不在bootstrap.properties配置的错误示例</strong></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 将所有配置项 写入application.properties中</span><br><span class=\"line\">server.port=8082</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置中心的具体地址，即 config-server</span><br><span class=\"line\">spring.cloud.config.uri=http://localhost:8081</span><br><span class=\"line\"># 对应 &#123;application&#125; 部分</span><br><span class=\"line\">spring.cloud.config.name=config-client</span><br><span class=\"line\"># 对应 &#123;profile&#125; 部分</span><br><span class=\"line\">spring.cloud.config.profile=dev</span><br><span class=\"line\"># 对应 &#123;label&#125; 部分，即 Git 的分支。如果配置中心使用的是本地存储，则该参数无用</span><br><span class=\"line\">spring.cloud.config.label=master</span><br></pre></td></tr></table></div></figure>\n<p>项目编译时会报错：找不到目标文件，默认启动8888端口</p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888</span><br><span class=\"line\">c.c.c.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available</span><br><span class=\"line\">c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for &quot;http://localhost:8888/config-client/dev/master&quot;: Connection refused (Connection refused); nested exception is java.net.ConnectException: Connection refused (Connection refused)</span><br><span class=\"line\">c.s.c.ConfigClientApplication: No active profile set, falling back to default profiles: default</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"控制器\">控制器<a href=\"post/spring-cloud-config#控制器\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spaco.configclient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.env.Environment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;filename&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String filename;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Environment environment;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">IndexController</span><span class=\"params\">(Environment environment)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(<span class=\"string\">\"/filename\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">filename</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"filename is :\"</span>+filename;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(<span class=\"string\">\"/filename-env\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">filename_env</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> environment.getProperty(<span class=\"string\">\"filename\"</span>,<span class=\"string\">\"undefine\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"启动服务-1\">启动服务<a href=\"post/spring-cloud-config#启动服务-1\"></a></h3><p>启动内容：</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Fetching config from server at : http://localhost:8081</span><br><span class=\"line\">Located environment: name=config-client, profiles=[dev], label=master, version=dd39228cf1b62a2a12f6afb26fc49dda0d8cd451, state=null</span><br><span class=\"line\">Located property <span class=\"built_in\">source</span>: CompositePropertySource &#123;name=<span class=\"string\">'configService'</span>, propertySources=[MapPropertySource &#123;name=<span class=\"string\">'configClient'</span>&#125;, MapPropertySource &#123;name=<span class=\"string\">'https://github.com/spaco/spring-cloud-config-repo-samples/config-client-dev.properties'</span>&#125;, MapPropertySource &#123;name=<span class=\"string\">'https://github.com/spaco/spring-cloud-config-repo-samples/config-client-dev.yml'</span>&#125;, MapPropertySource &#123;name=<span class=\"string\">'https://github.com/spaco/spring-cloud-config-repo-samples/config-client.properties'</span>&#125;, MapPropertySource &#123;name=<span class=\"string\">'https://github.com/spaco/spring-cloud-config-repo-samples/config-client.yml'</span>&#125;]&#125;</span><br><span class=\"line\">No active profile <span class=\"built_in\">set</span>, falling back to default profiles: default</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"Test-Cases-1\">Test Cases<a href=\"post/spring-cloud-config#Test-Cases-1\"></a></h3><figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl localhost:8082/filename</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename is :config-client-dev.properties</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl localhost:8082/filename-env</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config-client-dev.properties</span><br></pre></td></tr></table></div></figure>\n<h2 id=\"Config-Refresh-：-Manual\">Config Refresh ： Manual<a href=\"post/spring-cloud-config#Config-Refresh-：-Manual\"></a></h2><p>Spring Cloud config强大的地方就在可以动态刷新服务的配置信息。然而，Spring Boot应用只能在服务启动的时候才能加载它们的配置信息，所以在Config Server对服务的配置做出的变更，Config Client 服务没办法主动去获取新的配置。所以Spring Boot提供一个@RefreshScope注解来解决这一问题，使用该注解后，开发团队可以使用<code>/actuator/refresh</code>来让应用主动重新读取配置信息。下面是@RefreshScope注解的使用方法：</p>\n<h3 id=\"配置Gradle-2\">配置Gradle<a href=\"post/spring-cloud-config#配置Gradle-2\"></a></h3><figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 增加依赖 spring-boot-starter-actuator</span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation &apos;org.springframework.boot:spring-boot-starter-actuator&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"配置-RefreshScope-注解：于-Config-Client-Controller\">配置 @RefreshScope 注解：于 Config Client Controller<a href=\"post/spring-cloud-config#配置-RefreshScope-注解：于-Config-Client-Controller\"></a></h3><figure class=\"highlight java\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.spaco.configclient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.env.Environment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.context.config.annotation.RefreshScope;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RefreshScope</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;filename&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String filename;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Environment environment;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">IndexController</span><span class=\"params\">(Environment environment)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(<span class=\"string\">\"/filename\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">filename</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"filename is :\"</span>+filename;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping</span>(<span class=\"string\">\"/filename-env\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">filename_env</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> environment.getProperty(<span class=\"string\">\"filename\"</span>,<span class=\"string\">\"undefine\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"启动服务-2\">启动服务<a href=\"post/spring-cloud-config#启动服务-2\"></a></h3><h3 id=\"Test-Cases-2\">Test Cases<a href=\"post/spring-cloud-config#Test-Cases-2\"></a></h3><p>在不改变Git配置的情况下，调取refeash接口</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -X POST http://localhost:8082/actuator/refresh</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[]</span><br></pre></td></tr></table></div></figure>\n<p>结果：空数据，无Git配置修改</p>\n<p>调取 <code>curl localhost:8082/filename</code></p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename is :config-client-dev.properties</span><br></pre></td></tr></table></div></figure>\n<p>更新<code>config-client-dev.properties</code>配置文件，更新<code>filename</code>属性</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename=config-client-dev.properties updated</span><br></pre></td></tr></table></div></figure>\n<p>调取refeash接口:</p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -X POST http://localhost:8082/actuator/refresh</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">\"config.client.version\"</span>,<span class=\"string\">\"filename\"</span>]</span><br></pre></td></tr></table></div></figure>\n<p>结果：返回修改的参数名</p>\n<p>调取 <code>curl localhost:8082/filename</code></p>\n<figure class=\"highlight bash\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filename is :config-client-dev.properties updated</span><br></pre></td></tr></table></div></figure>\n<p>结果：在不重启服务的情况下，更新的配置已生效</p>\n<h2 id=\"References\">References<a href=\"post/spring-cloud-config#References\"></a></h2><ul>\n<li><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html\" target=\"_blank\" rel=\"noopener\">Actuator endpoints</a></li>\n<li></li>\n</ul>\n","prev":{"title":"Spring Cloud Netflix Eureka","link":"post/spring-cloud-Netflix-eureka"},"next":{"title":"Java basic grammar","link":"post/Java-basic-grammar"},"plink":"https://spaco.github.io/post/spring-cloud-config/","toc":[{"title":"Spring Cloud Config","id":"Spring-Cloud-Config","index":"1","children":[{"title":"Introduction","id":"Introduction","index":"1.1"},{"title":"Development Environment","id":"Development-Environment","index":"1.2"},{"title":"Key Words","id":"Key-Words","index":"1.3"},{"title":"Build Config Server","id":"Build-Config-Server","index":"1.4","children":[{"title":"配置Gradle","id":"配置Gradle","index":"1.4.1"},{"title":"配置 application.properties","id":"配置-application-properties","index":"1.4.2"},{"title":"配置启动器","id":"配置启动器","index":"1.4.3"},{"title":"Test Cases","id":"Test-Cases","index":"1.4.4"}]},{"title":"Build Config Client","id":"Build-Config-Client","index":"1.5","children":[{"title":"配置Gradle","id":"配置Gradle-1","index":"1.5.1"},{"title":"配置 application.properties","id":"配置-application-properties-1","index":"1.5.2"},{"title":"配置 bootstrap.properties","id":"配置-bootstrap-properties","index":"1.5.3"},{"title":"控制器","id":"控制器","index":"1.5.4"},{"title":"启动服务","id":"启动服务-1","index":"1.5.5"},{"title":"Test Cases","id":"Test-Cases-1","index":"1.5.6"}]},{"title":"Config Refresh ： Manual","id":"Config-Refresh-：-Manual","index":"1.6","children":[{"title":"配置Gradle","id":"配置Gradle-2","index":"1.6.1"},{"title":"配置 @RefreshScope 注解：于 Config Client Controller","id":"配置-RefreshScope-注解：于-Config-Client-Controller","index":"1.6.2"},{"title":"Test Cases","id":"Test-Cases-2","index":"1.6.3"}]},{"title":"References","id":"References","index":"1.7"}]}]}