{"title":"kafka-case-with-python","date":"2018-10-05T00:00:00.000Z","slug":"kafka-case-with-python","tags":["MQ","kafka"],"categories":["program"],"updated":"2018-10-05T00:00:00.000Z","content":"<h2 id=\"Kafka-in-python\">Kafka in python<a href=\"post/kafka-case-with-python#Kafka-in-python\"></a></h2><h2 id=\"Build-kafka\">Build kafka<a href=\"post/kafka-case-with-python#Build-kafka\"></a></h2><h2 id=\"environment\">environment<a href=\"post/kafka-case-with-python#environment\"></a></h2><ul>\n<li><p>kafka </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / -name \\*kafka_\\* | head -1 | grep -o <span class=\"string\">'\\kafka[^\\n]*'</span></span><br><span class=\"line\">kafka_2.11-2.0.1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -V    <span class=\"comment\">#use pyenv</span></span><br><span class=\"line\">3.6.6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>zookeeper</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version:</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">stat</span>|nc 127.0.0.1 2181</span><br><span class=\"line\"></span><br><span class=\"line\">Zookeeper version: 3.4.9-1757313, built on 08/23/2016 06:50 GMT</span><br><span class=\"line\">Clients:</span><br><span class=\"line\"> /172.23.0.1:41242[0](queued=0,recved=1,sent=0)</span><br><span class=\"line\"> /172.23.0.2:49830[1](queued=0,recved=1152,sent=1153)</span><br><span class=\"line\"></span><br><span class=\"line\">Latency min/avg/max: -33/0/91</span><br><span class=\"line\">Received: 5129</span><br><span class=\"line\">Sent: 5139</span><br><span class=\"line\">Connections: 2</span><br><span class=\"line\">Outstanding: 0</span><br><span class=\"line\">Zxid: 0xa3</span><br><span class=\"line\">Mode: standalone</span><br><span class=\"line\">Node count: 133</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"Test\">Test<a href=\"post/kafka-case-with-python#Test\"></a></h3><ol>\n<li><p>Install Python Client</p>\n<p><a href=\"https://pypi.org/project/kafka-python/\" target=\"_blank\" rel=\"noopener\">kafka-python 1.4.4</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install kafka-python</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Producer</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\">from kafka import KafkaProducer</span><br><span class=\"line\">import time</span><br><span class=\"line\">producer = KafkaProducer(bootstrap_servers=[<span class=\"string\">'127.0.0.1:9092'</span>])  <span class=\"comment\">#此处ip可以是多个['0.0.0.1:9092','0.0.0.2:9092','0.0.0.3:9092' ]</span></span><br><span class=\"line\">topic_name = <span class=\"string\">'test'</span></span><br><span class=\"line\"></span><br><span class=\"line\">i=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> True:</span><br><span class=\"line\">    ts = int(time.time() * 1000)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># msg = '&#123;\"phone\": 17626041117, \"extra-key\": \"extra-value\"&#125;'</span></span><br><span class=\"line\">    msg = str(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\">    producer.send(topic_name, msg.encode(<span class=\"string\">'utf-8'</span>))  <span class=\"comment\"># 参数为主题和bytes数据</span></span><br><span class=\"line\">    producer.flush()</span><br><span class=\"line\">    i+=1              </span><br><span class=\"line\">    time.sleep(2)</span><br></pre></td></tr></table></figure>\n<p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python producer.py</span><br><span class=\"line\"></span><br><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>consumer</p>\n<ul>\n<li><p>basic</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\">from kafka import KafkaConsumer, TopicPartition</span><br><span class=\"line\"></span><br><span class=\"line\">topic_name = <span class=\"string\">'test'</span></span><br><span class=\"line\">groupid = <span class=\"string\">'group1'</span></span><br><span class=\"line\">server_list = <span class=\"string\">'127.0.0.1:9092'</span></span><br><span class=\"line\"></span><br><span class=\"line\">consumer = KafkaConsumer(topic_name,bootstrap_servers=server_list)</span><br><span class=\"line\"><span class=\"keyword\">for</span> message <span class=\"keyword\">in</span> consumer:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(message)</span><br></pre></td></tr></table></figure>\n<p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python consumer.py</span><br><span class=\"line\"></span><br><span class=\"line\">ConsumerRecord(topic=u<span class=\"string\">'test'</span>, partition=0, offset=69, timestamp=1544090653375, timestamp_type=0, key=None, value=<span class=\"string\">'0'</span>, headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=1, serialized_header_size=-1)</span><br><span class=\"line\"></span><br><span class=\"line\">ConsumerRecord(topic=u<span class=\"string\">'test'</span>, partition=0, offset=70, timestamp=1544090655386, timestamp_type=0, key=None, value=<span class=\"string\">'1'</span>, headers=[], checksum=None, serialized_key_size=-1, serialized_value_size=1, serialized_header_size=-1)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>拉取未消费的信息：断开连接，再次bash进入消费的时候，会拉取所有的消息，而我们需要获取从断开点之后创建的信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\">from kafka import KafkaConsumer, TopicPartition</span><br><span class=\"line\"></span><br><span class=\"line\">topic_name = <span class=\"string\">'test'</span></span><br><span class=\"line\">groupid = <span class=\"string\">'group1'</span></span><br><span class=\"line\">server_list = <span class=\"string\">'127.0.0.1:9092'</span></span><br><span class=\"line\"><span class=\"comment\"># offset                        </span></span><br><span class=\"line\">consumer = KafkaConsumer(group_id=groupid,</span><br><span class=\"line\">                         bootstrap_servers=server_list)</span><br><span class=\"line\">partition = TopicPartition(topic_name, 0)</span><br><span class=\"line\">consumer.assign([partition])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"start offset is \"</span>, consumer.position(partition))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> message <span class=\"keyword\">in</span> consumer:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(message)</span><br><span class=\"line\">  file = open(<span class=\"string\">'consumer.log'</span>,<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  file.write(message.value + <span class=\"string\">\"\\n\"</span>)</span><br></pre></td></tr></table></figure>\n<p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python consumer.py</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"reference\">reference<a href=\"post/kafka-case-with-python#reference\"></a></h3><ul>\n<li><p><a href=\"http://qimingyu.com/2018/06/30/Kafka%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E7%9A%84%E9%97%AE%E9%A2%98/\" target=\"_blank\" rel=\"noopener\">kafka-python重复消费的问题</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/beyond_f4/article/details/80310340\" target=\"_blank\" rel=\"noopener\">Python脚本消费kafka数据</a></p>\n</li>\n<li><p><a href=\"http://www.uml.org.cn/python/201801092.asp\" target=\"_blank\" rel=\"noopener\">Python操作分布式流处理系统Kafka</a></p>\n</li>\n</ul>\n<h3 id=\"QAQ\">QAQ<a href=\"post/kafka-case-with-python#QAQ\"></a></h3><ul>\n<li><p>vscode pip安装kafka 后，通过 iterm2 操作出现 ImportError: No module named kafka</p>\n<p>重装。。。</p>\n</li>\n<li><p>kafka.errors.NoBrokersAvailable: NoBrokersAvailable</p>\n<p>指定的kafka host无效</p>\n</li>\n</ul>\n<h3 id=\"Remarks\">Remarks<a href=\"post/kafka-case-with-python#Remarks\"></a></h3><ul>\n<li>group_id 不需要配置，用户确定名称即可</li>\n</ul>\n","prev":{"title":"kafka-build-with-docker-compose","slug":"kafka-build-with-docker-compose"},"next":{"title":"hexo-on-github-pages","slug":"hexo-on-github-pages"},"link":"https://spaco.github.io/post/kafka-case-with-python/","toc":[{"title":"environment","id":"environment","index":"1","children":[{"title":"Test","id":"Test","index":"1.1"},{"title":"reference","id":"reference","index":"1.2"},{"title":"QAQ","id":"QAQ","index":"1.3"},{"title":"Remarks","id":"Remarks","index":"1.4"}]}]}