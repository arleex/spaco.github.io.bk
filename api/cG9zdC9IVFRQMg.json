{"title":"HTTP2","date":"2019-08-19T00:00:00.000Z","link":"post/HTTP2","tags":["http"],"categories":["program"],"updated":"2019-08-19T00:00:00.000Z","content":"<h2 id=\"HTTP-2\">HTTP/2<a href=\"post/HTTP2#HTTP-2\"></a></h2><h3 id=\"History\">History<a href=\"post/HTTP2#History\"></a></h3><blockquote>\n<p><strong>HTTP/2</strong>（超文本传输协议第2版，最初命名为<strong>HTTP 2.0</strong>），简称为<strong>h2</strong>（基于TLS/1.2或以上版本的加密连接）或<strong>h2c</strong>（非加密连接），是<a href=\"https://zh.wikipedia.org/wiki/HTTP\" target=\"_blank\" rel=\"noopener\">HTTP</a>协议的的第二个主要版本，使用于<a href=\"https://zh.wikipedia.org/wiki/全球資訊網\" target=\"_blank\" rel=\"noopener\">万维网</a>。</p>\n<p>HTTP/2是<a href=\"https://zh.wikipedia.org/wiki/HTTP\" target=\"_blank\" rel=\"noopener\">HTTP</a>协议自1999年HTTP 1.1发布后的首个更新，主要基于<a href=\"https://zh.wikipedia.org/wiki/SPDY\" target=\"_blank\" rel=\"noopener\">SPDY</a>协议。它由<a href=\"https://zh.wikipedia.org/wiki/互联网工程任务组\" target=\"_blank\" rel=\"noopener\">互联网工程任务组</a>（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小组进行开发。该组织于2014年12月将HTTP/2标准提议递交至<a href=\"https://zh.wikipedia.org/w/index.php?title=IESG&amp;action=edit&amp;redlink=1\" target=\"_blank\" rel=\"noopener\">IESG</a>进行讨论，于2015年2月17日被批准。</p>\n<p>HTTP/2标准于2015年5月以RFC 7540正式发表。HTTP/2的标准化工作由<a href=\"https://zh.wikipedia.org/wiki/Google_Chrome\" target=\"_blank\" rel=\"noopener\">Chrome</a>、<a href=\"https://zh.wikipedia.org/wiki/Opera瀏覽器\" target=\"_blank\" rel=\"noopener\">Opera</a>、<a href=\"https://zh.wikipedia.org/wiki/Firefox\" target=\"_blank\" rel=\"noopener\">Firefox</a>、<a href=\"https://zh.wikipedia.org/wiki/Internet_Explorer_11\" target=\"_blank\" rel=\"noopener\">Internet Explorer 11</a>、<a href=\"https://zh.wikipedia.org/wiki/Safari\" target=\"_blank\" rel=\"noopener\">Safari</a>、<a href=\"https://zh.wikipedia.org/w/index.php?title=Amazon_Silk&amp;action=edit&amp;redlink=1\" target=\"_blank\" rel=\"noopener\">Amazon Silk</a>及<a href=\"https://zh.wikipedia.org/wiki/Microsoft_Edge\" target=\"_blank\" rel=\"noopener\">Edge</a>等浏览器提供支持。</p>\n<p>多数主流浏览器已经在2015年底支持了该协议。此外，根据<a href=\"https://zh.wikipedia.org/w/index.php?title=W3Techs&amp;action=edit&amp;redlink=1\" target=\"_blank\" rel=\"noopener\">W3Techs</a>的数据，截至2019年6月，全球有36.5%的网站支持了HTTP/2。</p>\n<p>—wiki</p>\n</blockquote>\n<h3 id=\"Key-Points\">Key Points<a href=\"post/HTTP2#Key-Points\"></a></h3><ul>\n<li><p><strong><a href=\"https://zh.wikipedia.org/wiki/HTTP/2\" target=\"_blank\" rel=\"noopener\">SPDY</a></strong> ：<strong>SPDY</strong>（发音如英语：speedy），一种<a href=\"https://zh.wikipedia.org/wiki/開放原始碼\" target=\"_blank\" rel=\"noopener\">开放</a>的<a href=\"https://zh.wikipedia.org/wiki/網路傳輸協定\" target=\"_blank\" rel=\"noopener\">网络传输协议</a>，由<a href=\"https://zh.wikipedia.org/wiki/Google\" target=\"_blank\" rel=\"noopener\">Google</a>开发，SPDY也就是<a href=\"https://zh.wikipedia.org/wiki/HTTP/2\" target=\"_blank\" rel=\"noopener\">HTTP/2</a>的前身。设计SPDY的目的在于降低网页的加载时间。通过优先级和多路复用，SPDY使得只需要创建一个TCP连接即可传送网页内容及图片等资源。SPDY中广泛应用了TLS加密，传输内容也均以gzip或DEFLATE格式压缩（与HTTP不同，HTTP的头部并不会被压缩）。另外，除了像HTTP的网页服务器被动的等待浏览器发起请求外，SPDY的网页服务器还可以主动推送内容。</p>\n</li>\n<li><p><strong><a href=\"[https://zh.wikipedia.org/wiki/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8](https://zh.wikipedia.org/wiki/多路复用\">多路复用</a>)</strong>：多路复用通常表示在一个<a href=\"https://zh.wikipedia.org/wiki/信道\" target=\"_blank\" rel=\"noopener\">信道</a>上<a href=\"https://zh.wikipedia.org/wiki/传输\" target=\"_blank\" rel=\"noopener\">传输</a>多路<a href=\"https://zh.wikipedia.org/wiki/信号\" target=\"_blank\" rel=\"noopener\">信号</a>或<a href=\"https://zh.wikipedia.org/w/index.php?title=数据流&amp;action=edit&amp;redlink=1\" target=\"_blank\" rel=\"noopener\">数据流</a>的过程和技术。因为多路复用能够将多个低速信道整合到一个高速信道进行传输，从而有效地利用了高速信道。通过使用多路复用</p>\n</li>\n<li><p><strong>TCP连接</strong></p>\n</li>\n<li><p><strong>流</strong></p>\n</li>\n<li><p><strong>消息</strong></p>\n</li>\n<li><p><strong>帧</strong></p>\n</li>\n<li><p><strong>HPACK 算法</strong>：</p>\n<p>HPACK算法是新引入HTTP/2的一个算法，用于对HTTP头部做压缩。其原理在于：</p>\n<ul>\n<li>客户端与服务端根据 <a href=\"https://tools.ietf.org/html/rfc7541\" target=\"_blank\" rel=\"noopener\">RFC 7541</a> 的附录A，维护一份共同的静态字典（Static Table），其中包含了常见头部名及常见头部名称与值的组合的代码；</li>\n<li>客户端和服务端根据先入先出的原则，维护一份可动态添加内容的共同动态字典（Dynamic Table）；</li>\n<li>客户端和服务端根据 <a href=\"https://tools.ietf.org/html/rfc7541\" target=\"_blank\" rel=\"noopener\">RFC 7541</a> 的附录B，支持基于该静态哈夫曼码表的哈夫曼编码（Huffman Coding）。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>有别于HTTP/1.1在连接中的明文请求，HTTP/2与SPDY一样，将一个TCP连接分为若干个流（Stream），每个流中可以传输若干消息（Message），每个消息由若干最小的二进制帧（Frame）组成。这也是HTTP/1.1与HTTP/2最大的区别所在。 HTTP/2中，每个用户的操作行为被分配了一个<strong>流编号</strong>(stream ID)，这意味着用户与服务端之间创建了一个TCP通道；协议将每个请求分割为二进制的控制帧与数据帧部分，以便解析。这个举措在SPDY中的实践表明，相比HTTP/1.1，新页面加载可以加快11.81% 到 47.7%</p>\n<p>—wiki</p>\n</blockquote>\n<h3 id=\"Why-HTTP-2\">Why HTTP/2<a href=\"post/HTTP2#Why-HTTP-2\"></a></h3><p>先看一下案例</p>\n<p><a href=\"https://http1.golang.org/gophertiles\" target=\"_blank\" rel=\"noopener\">https://http1.golang.org/gophertiles</a></p>\n<p><a href=\"https://http2.akamai.com/demo\" target=\"_blank\" rel=\"noopener\">https://http2.akamai.com/demo</a></p>\n<h3 id=\"Comparison\">Comparison<a href=\"post/HTTP2#Comparison\"></a></h3><h4 id=\"HTTP-2与HTTP-1-1比较\">HTTP/2与HTTP/1.1比较<a href=\"post/HTTP2#HTTP-2与HTTP-1-1比较\"></a></h4><p>HTTP/2 相比 HTTP/1.1 的修改并不会破坏现有程序的工作，但是新的程序可以借由新特性得到更好的速度。<br>HTTP/2 保留了 HTTP/1.1 的大部分语义，例如请求方法、状态码乃至URI和绝大多数HTTP头部字段一致。而 HTTP/2 采用了新的方法来编码、传输 客户端&lt;——&gt;服务器 间的数据。</p>\n<h4 id=\"HTTP-1-1与SPDY的区别\">HTTP/1.1与SPDY的区别<a href=\"post/HTTP2#HTTP-1-1与SPDY的区别\"></a></h4><p>SPDY (发音为”speedy”) 是一个由 Google 主导的研究项目发明的HTTP替代协议。[13]SPDY一开始主要关注降低延迟，采用了TCP通道，但是使用了不同的协议来达到此目的。其与HTTP/1.1相比，主要的改变有：</p>\n<ul>\n<li>实现无需先入先出的多路复用</li>\n<li>为简化客户端和服务器开发的消息 ：帧机制</li>\n<li>强制性压缩（包括HTTP头部）</li>\n<li>优先级排序</li>\n<li>双向通讯</li>\n</ul>\n<h4 id=\"HTTP-2与SPDY的比较\">HTTP/2与SPDY的比较<a href=\"post/HTTP2#HTTP-2与SPDY的比较\"></a></h4><p>HTTP/2的开发基于SPDY进行跃进式改进。在诸多修改中，最显著的改进在于，HTTP/2使用了一份经过定制的压缩算法，基于霍夫曼编码，以此替代了SPDY的动态流压缩算法，以避免对协议的Oracle攻击——这一类攻击以CRIME为代表。此外，HTTP/2禁用了诸多加密包，以保证基于TLS的连接的前向安全。</p>\n<h3 id=\"Browser-support\">Browser support<a href=\"post/HTTP2#Browser-support\"></a></h3><p>截至2015年末，主要的浏览器的最新版本已经支持HTTP/2这一协议。其中：</p>\n<p>Google Chrome、Mozilla Firefox、Microsoft Edge和Opera已支持HTTP/2，并默认启用。<br>Internet Explorer自IE 11开始支持HTTP/2，并预设激活。</p>\n<h3 id=\"References\">References<a href=\"post/HTTP2#References\"></a></h3><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/26559480\" target=\"_blank\" rel=\"noopener\">一文读懂 HTTP/2 特性</a></li>\n<li><a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/HTTP/2\" target=\"_blank\" rel=\"noopener\">维基百科：HTTP/2</a></li>\n<li><a href=\"https://link.zhihu.com/?target=https%3A//ye11ow.gitbooks.io/http2-explained/content/part2.html\" target=\"_blank\" rel=\"noopener\">http2讲解</a></li>\n</ul>\n","next":{"title":"oauth2.0","link":"post/oauth2.0"},"plink":"https://spaco.github.io/post/HTTP2/","toc":[{"title":"HTTP/2","id":"HTTP-2","index":"1","children":[{"title":"History","id":"History","index":"1.1"},{"title":"Key Points","id":"Key-Points","index":"1.2"},{"title":"Why HTTP/2","id":"Why-HTTP-2","index":"1.3"},{"title":"Comparison","id":"Comparison","index":"1.4","children":[{"title":"HTTP/2与HTTP/1.1比较","id":"HTTP-2与HTTP-1-1比较","index":"1.4.1"},{"title":"HTTP/1.1与SPDY的区别","id":"HTTP-1-1与SPDY的区别","index":"1.4.2"},{"title":"HTTP/2与SPDY的比较","id":"HTTP-2与SPDY的比较","index":"1.4.3"}]},{"title":"Browser support","id":"Browser-support","index":"1.5"},{"title":"References","id":"References","index":"1.6"}]}],"reward":true,"copyright":{"link":"<a href=\"https://spaco.github.io/post/HTTP2/\" title=\"HTTP2\">https://spaco.github.io/post/HTTP2/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}